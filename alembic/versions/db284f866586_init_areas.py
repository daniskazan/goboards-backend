"""init areas

Revision ID: db284f866586
Revises: 6615519fbd65
Create Date: 2024-07-28 21:11:33.624808

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import httpx
from sqlalchemy.orm import sessionmaker
from pydantic import BaseModel, Field
import uuid

from core.areas.models import AreaORM

# revision identifiers, used by Alembic.
revision: str = 'db284f866586'
down_revision: Union[str, None] = '6615519fbd65'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


class Area(BaseModel):
    name: str = Field(description="Название страны/региона/города")
    areas: list["SelfRef"] = Field(default=[])


class SelfRef(Area):
    pass


Area.model_rebuild()


def create_area(session, name: str, parent_id: uuid.UUID | None = None):
    area = AreaORM(id=uuid.uuid4(), name=name, parent_id=parent_id)
    session.add(area)
    session.commit()
    return area


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # engine = create_engine(db.DB_URL)
    bind = op.get_bind()
    Session = sessionmaker(bind)

    russia = httpx.get("https://api.hh.ru/areas/113")
    js = russia.json()
    Russia = Area(**js)

    with Session(bind=bind) as session:
        russia_orm = create_area(session, name=Russia.name)
        for region in Russia.areas:
            region_orm = create_area(session, name=region.name, parent_id=russia_orm.id)
            for city in region.areas:
                create_area(session, name=city.name, parent_id=region_orm.id)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    pass
    # ### end Alembic commands ###