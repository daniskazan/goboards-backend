"""drop cities countries table

Revision ID: c5b1057b1cef
Revises: af160f50024c
Create Date: 2024-07-28 21:07:11.390799

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c5b1057b1cef'
down_revision: Union[str, None] = 'af160f50024c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('cities')
    op.drop_table('areas')
    op.drop_table('countries')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='countries_pkey'),
    sa.UniqueConstraint('name', name='countries_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('areas',
    sa.Column('country_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['country_id'], ['countries.id'], name='areas_country_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='areas_pkey'),
    sa.UniqueConstraint('name', name='areas_name_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('cities',
    sa.Column('area_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], name='cities_area_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='cities_pkey'),
    sa.UniqueConstraint('area_id', 'name', name='area_id_city_name_unique')
    )
    # ### end Alembic commands ###
