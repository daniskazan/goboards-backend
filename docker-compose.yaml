version: '3'

services:
  nginx:
    image: nginx:1.25
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/log:/var/log/nginx
    container_name: nginx-${ENVIRONMENT_NAME:-local}
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - playgame-network
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - pg
      - redis
    environment:
      - DB_HOST=${DB_HOST}
    volumes:
      - ./src:/app/src
    networks:
      - goboards-network
    container_name: backend-${ENVIRONMENT_NAME:-local}
    ports:
      - "8000:8000"
  pg:
    image: postgres:16.1-alpine
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 30s
      timeout: 3s
      retries: 3
    container_name: pg-${ENVIRONMENT_NAME:-local}
    ports:
      - "5432:5432"
    volumes:
      - ./infrastructure/postgres-data:/var/lib/postgresql/data:cached
    networks:
      - playgame-network
  redis:
    image: redis/redis-stack
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    container_name: redis-${ENVIRONMENT_NAME:-local}
    ports:
      - "6379:6379"
      - "8001:8001"
    healthcheck:
      test: redis-cli ping
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ./infrastructure/redis/data:/data
    networks:
      - playgame-network

networks:
  playgame-network: